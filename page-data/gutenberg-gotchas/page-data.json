{"componentChunkName":"component---src-templates-blog-post-js","path":"/gutenberg-gotchas/","result":{"data":{"site":{"siteMetadata":{"title":"rafhun"}},"markdownRemark":{"id":"6bf208fb-f2fa-512f-8a4c-49c1856a5e2a","excerpt":"This post will be updated regularly and contains quick little tips and tricks when working with the WordPress block editor (Gutenberg). Get the current title…","html":"<p>This post will be updated regularly and contains quick little tips and tricks when working with the WordPress block editor (Gutenberg).</p>\n<h2>Get the current title</h2>\n<p>Use the following hook to get the current title of the post you are editing. Use this to i. e. prepopulate templates, link editor blocks to the title or generate some strings based on the title.</p>\n<p>Hint: since this makes use of a hook make sure to place this within a functional component.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useSelect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@wordpress/data\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> postTitle <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useSelect</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">select</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> getEditedPostAttribute <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core/editor\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> postTitle<span class=\"token operator\">:</span> <span class=\"token function\">getEditedPostAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"title\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>I prefer to return an object and destructure it as is done above since this let’s us easily extract more data using the <code class=\"language-text\">useSelect</code> hook.</p>\n<h2>Get Current Post Data</h2>\n<p>Make use of <code class=\"language-text\">getCurrentPost</code> to access the latest saved data about a post. This gives you access to a variety of data, it is what is returned by a REST query. Use this as follows.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useSelect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@wordpress/data\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> post <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useSelect</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">select</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> getCurrentPost <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core/editor\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> post<span class=\"token operator\">:</span> <span class=\"token function\">getCurrentPost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>You now can read the post data inside of the <code class=\"language-text\">post</code> variable. It is probably easiest to further destructure this object as in the following example.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n  author<span class=\"token punctuation\">,</span>\n  categories<span class=\"token punctuation\">,</span>\n  content<span class=\"token punctuation\">,</span>\n  date_gmt<span class=\"token punctuation\">,</span>\n  featured_media<span class=\"token punctuation\">,</span>\n  id<span class=\"token punctuation\">,</span>\n  link<span class=\"token punctuation\">,</span>\n  title<span class=\"token punctuation\">,</span>\n  type<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> post\n\n<span class=\"token comment\">// For custom post types: rename keys with hyphens during destructuring:</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"rh-custom-taxonomy\"</span><span class=\"token operator\">:</span> customTaxonomy<span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"rh-custom-taxonomy-2\"</span><span class=\"token operator\">:</span> customTaxonomy2<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> post</code></pre></div>\n<p>Taxonomy information is returned as an array of term ID’s, the author and featured media also return just an ID, most other keys just contain strings.</p>","frontmatter":{"title":"Gutenberg Gotchas","date":"October 26, 2020","description":null}},"previous":{"fields":{"slug":"/wordpress-block-patterns/"},"frontmatter":{"title":"WordPress Block Patterns"}},"next":{"fields":{"slug":"/wp-admin-branding/"},"frontmatter":{"title":"Branding the WordPress backend"}}},"pageContext":{"id":"6bf208fb-f2fa-512f-8a4c-49c1856a5e2a","previousPostId":"46033069-4e64-51a9-902b-c6440ab057f3","nextPostId":"3ce6b6ff-1e79-503e-a789-79d56ab169c4"}},"staticQueryHashes":["1633425274","2841359383"]}