{"componentChunkName":"component---src-templates-blog-post-js","path":"/wp-admin-branding/","result":{"data":{"site":{"siteMetadata":{"title":"rafhun"}},"markdownRemark":{"id":"3ce6b6ff-1e79-503e-a789-79d56ab169c4","excerpt":"Bring your client’s brand into the WordPress admin and the login screen to further personalize the experience of site admins and editors. Options You can…","html":"<p>Bring your client’s brand into the WordPress admin and the login screen to further personalize the experience of site admins and editors.</p>\n<h2>Options</h2>\n<p>You can hardcode the options and styles into your plugin or theme or better offer them as customizer options. If you want to use the customizer make sure to register controls for the following variables:</p>\n<ul>\n<li>Page Background: sets the background color of the login page</li>\n<li>Brand Color: used for the primary button on the login page</li>\n<li>Text Color: default text color on the login page</li>\n<li>Logo: Will be set as background image above the login form and in the admin bar</li>\n<li>Header URL: The logo on the login screen links to this URL</li>\n<li>Header Text</li>\n<li>Admin Footer Text: This text appears in the footer of backend pages</li>\n</ul>\n<h2>Login Screen</h2>\n<p>There are a few hooks available for customiztion of the login screen.</p>\n<h3>Page Styles</h3>\n<p>Create the additional styles needed for the login page based on options retrieved from the Customizer, then enqueue them using the <code class=\"language-text\">login_enqueue_scripts</code> action. By echoing the return of its function the styles are injected into the login page.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// Get options from customizer ...</span>\n\n<span class=\"token comment\">// Page wide styles</span>\n<span class=\"token variable\">$pageStyles</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'\n  .login {\n    background-color: '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$pageBackground</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">';\n    color: '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$textColor</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">';\n  }\n'</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>Using the <code class=\"language-text\">.login</code> class allows you to override the default WordPress sitewide styles. Next we will set up the styling we need for the logo section.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// ...</span>\n<span class=\"token variable\">$logoStyles</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'\n  #login h1 a {\n    background-image: url('</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$logoPath</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">');\n  }\n\n  .login form h1.admin-email__heading {\n    color: '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$textColor</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">';\n  }\n'</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>Finally we need to adjust the submit button styles. Here we keep with WordPress default button styles and are just adjusting the colors in use.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// ...</span>\n<span class=\"token variable\">$buttonStyles</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'\n  .wp-core-ui form .button {\n    background-color: '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$pageBackground</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">';\n    color: '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$textColor</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">';\n    border-color: '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$textColor</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">';\n  }\n\n  .wp-core-ui form .button:focus,\n  .wp-core-ui form .button:hover {\n    box-shadow: 0 0 0 1px '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$textColor</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">';\n    background-color: '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$pageBackground</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">';\n    border-color: '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$textColor</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">';\n    color: '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$textColor</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">';\n  }\n\n  .wp-core-ui form .button-primary {\n    background-color: '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$brandColor</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">';\n    border-color: '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$brandColor</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">';\n    color: '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$pageBackground</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">';\n  }\n\n  .wp-core-ui form .button-primary:focus,\n  .wp-core-ui form .button-primary:hover {\n    box-shadow: 0 0 0 1px '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$pageBackground</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">', 0 0 0 3px '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$brandColor</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">';\n    background-color: '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$brandColor</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">';\n    border-color: '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$brandColor</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">';\n    color: '</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$pageBackground</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">';\n  }\n'</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<p>Finally we put together all CSS and echo it as part of the hook.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token comment\">// ...</span>\n<span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'\n  &lt;style type=\"text/css\">'</span> <span class=\"token punctuation\">.</span>\n    <span class=\"token variable\">$pageStyles</span> <span class=\"token punctuation\">.</span>\n    <span class=\"token variable\">$logoStyles</span> <span class=\"token punctuation\">.</span>\n    <span class=\"token variable\">$buttonStyles</span> <span class=\"token punctuation\">.</span>\n  <span class=\"token single-quoted-string string\">'&lt;/style>\n'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3>Header URL and Text</h3>\n<p>The logo above the login form is linked to <code class=\"language-text\">wordpress.org</code> by default. There is also some hidden text in place that is used by screen readers while the browser only displays the logo which is set as background image (see above). There are hooks that allow adjustment of both the URL and text which can be used as follows.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">add_filter</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'login_headerurl'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Get the URL from customizer -> $url</span>\n\n  <span class=\"token comment\">// Validate and return the URL</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">esc_url_raw</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Fallback default</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token variable\">$url</span> <span class=\"token operator\">||</span> <span class=\"token single-quoted-string string\">''</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token single-quoted-string string\">'https://wordpress.org'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">add_filter</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'login_headertext'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Get from customizer -> $text</span>\n  <span class=\"token keyword\">return</span> <span class=\"token variable\">$text</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></span></code></pre></div>\n<h2>Admin Area</h2>\n<p>There are a few branding options available in the admin area of a WordPress website. It is possible to render your own logo in the admin bar and you may adjust the footer text.</p>\n<h3>Admin Bar Logo</h3>\n<p>Use the <code class=\"language-text\">wp_before_admin_bar_render</code> hook to display your own logo in the admin bar. You set this up by injecting some custom CSS that overrides core defaults.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token function\">add_action</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'wp_before_admin_bar_render'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Get the admin bar logo from customizer -> $logoPath</span>\n  <span class=\"token keyword\">echo</span> <span class=\"token single-quoted-string string\">'\n  &lt;style type=\"text/css\">\n    #wpadminbar #wp-admin-bar-wp-logo > .ab-item .ab-icon::before {\n      background-image: url('</span> <span class=\"token punctuation\">.</span> <span class=\"token variable\">$logoPath</span> <span class=\"token punctuation\">.</span> <span class=\"token single-quoted-string string\">');\n      background-position: 0 0;\n      color: rgba(0, 0, 0, 0);\n    }\n\n    #wpadminbar #wp-admin-bar-wp-logo:hover > .ab-item .ab-icon::before {\n      background-position: 0 0;\n    }\n  &lt;/style>\n  '</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<h3>Admin Footer</h3>\n<p>The <code class=\"language-text\">admin_footer_text</code> filter just expects you to echo a string.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n<span class=\"token comment\">// Get the footer text from customizer -> $text</span>\n<span class=\"token function\">add_filter</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'admin_footer_text'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">echo</span> <span class=\"token variable\">$text</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></span></code></pre></div>","frontmatter":{"title":"Branding the WordPress backend","date":"October 26, 2020","description":null}},"previous":{"fields":{"slug":"/gutenberg-gotchas/"},"frontmatter":{"title":"Gutenberg Gotchas"}},"next":null},"pageContext":{"id":"3ce6b6ff-1e79-503e-a789-79d56ab169c4","previousPostId":"6bf208fb-f2fa-512f-8a4c-49c1856a5e2a","nextPostId":null}},"staticQueryHashes":["1633425274","2841359383"]}