{"componentChunkName":"component---src-templates-blog-post-js","path":"/gutenberg-color-picker-setup/","result":{"data":{"site":{"siteMetadata":{"title":"rafhun"}},"markdownRemark":{"id":"c80cbf01-90a9-56d2-902f-45638e5ce7e3","excerpt":"In most cases block colors can be enabled using supports flags. This works well, if the colors can be applied to the containing block and do not require anyâ€¦","html":"<p>In most cases block colors can be enabled using supports flags. This works well, if the colors can be applied to the containing block and do not require any special treatment. You can use this as follows in the <code class=\"language-text\">block.json</code> files (here we have added additional support for gradients and to set a link color).</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"supports\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"__experimentalColor\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"gradients\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"linkColor\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Attributes</h2>\n<p>If using the <code class=\"language-text\">supports</code> flag and that implementation is working for you, i. e. you are happy with color definitions being applied to the block, you can remove all existing attributes concerning coloring (such as <code class=\"language-text\">backgroundColor</code>, <code class=\"language-text\">customBackgroundColor</code>, etc.).</p>\n<p>When more control is necessary make sure to include the following attributes in your <code class=\"language-text\">block.json</code> file.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"style\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"object\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"backgroundColor\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"string\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"textColor\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"string\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"gradient\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"string\"</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Of course <code class=\"language-text\">gradient</code> is only necessary if you select to support gradients. When migrating, remove the <code class=\"language-text\">customBackgroundColor</code> and <code class=\"language-text\">customTextColor</code> attributes. Those are being merged into the <code class=\"language-text\">style</code> attribute.</p>\n<h3>Migration</h3>\n<p>To ensure full compatibility with your new implementation you need to add the following to the <code class=\"language-text\">deprecated.js</code> file and make sure to include it in your exported settings.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// deprecated.js</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">migrateCustomColors</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">attributes</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Skip if there are no custom colors</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>attributes<span class=\"token punctuation\">.</span>customTextColor <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>attributes<span class=\"token punctuation\">.</span>customBackgroundColor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> attributes\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> style <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> color<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Migrate text color</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>attributes<span class=\"token punctuation\">.</span>customTextColor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    style<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> attributes<span class=\"token punctuation\">.</span>customTextColor\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Migrate background color</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>attributes<span class=\"token punctuation\">.</span>customBackgroundColor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    style<span class=\"token punctuation\">.</span>color<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> attributes<span class=\"token punctuation\">.</span>customBackgroundColor\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token operator\">...</span>attributes<span class=\"token punctuation\">,</span>\n    style<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> deprecated <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Only relevant is shown, add possible supports and save function of deprecated implementation as well</span>\n    attributes<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Include all of them as they were defined</span>\n    migrate<span class=\"token operator\">:</span> migrateCustomColors<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> deprecated</code></pre></div>\n<p>With this in place older implementations of your block will automatically be updated to this one.</p>\n<h2>The <code class=\"language-text\">edit</code> function</h2>\n<h3>Using <code class=\"language-text\">supports</code></h3>\n<p>If you are using the <code class=\"language-text\">supports</code> flag only, remove everything concerning the color picker (actual color picker component, contrast checker, etc. probably the whole panel) and change your main block to the <code class=\"language-text\">Block</code> component as demonstrated below.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> __experimentalBlock <span class=\"token keyword\">as</span> Block <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@wordpress/block-editor\"</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">Edit</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Everything else</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Block.div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">The block contents.</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Block.div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Adjust the HTML container according to the markup you need and that makes sense semantically.</p>\n<h3>Manual control</h3>\n<p>To gain some more control over colors, i. e. where they get applied, when they should show up, etc. you can set things up in the <code class=\"language-text\">edit</code> function. However you also need to copy some core code until a proper integration is provided.</p>\n<p>Copy and adapt the <code class=\"language-text\">ColorEdit</code> function from the <code class=\"language-text\">core/button</code> <a href=\"https://github.com/WordPress/gutenberg/blob/wp/5.5/packages/block-library/src/button/color-edit.js\">block</a>. Additionally you will need the <code class=\"language-text\">getColorAndStyleProps</code> function which in a similar way can be copied from the <code class=\"language-text\">core/button</code> <a href=\"https://github.com/WordPress/gutenberg/blob/wp/5.5/packages/block-library/src/button/color-props.js\">block</a>.</p>\n<p>In your <code class=\"language-text\">edit.js</code> partial you need to import these two functions. Then call <code class=\"language-text\">useSelect</code> to load the color settings from the block editor and transform its return using <code class=\"language-text\">getColorAndStyleProps</code>. These props can the be used to assign classes and styles to editor components as shown below.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// edit.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useSelect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@wordpress/data\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> RichText<span class=\"token punctuation\">,</span> __experimentalBlock <span class=\"token keyword\">as</span> Block <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@wordpress/block-editor\"</span>\n\n<span class=\"token keyword\">import</span> ColorEdit <span class=\"token keyword\">from</span> <span class=\"token string\">\"./ColorEdit\"</span>\n<span class=\"token keyword\">import</span> getColorAndStyleProps <span class=\"token keyword\">from</span> <span class=\"token string\">\"./getColorAndStyleProps\"</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> colors <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useSelect</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">select</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"core/block-editor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSettings</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> colorProps <span class=\"token operator\">=</span> <span class=\"token function\">getColorAndStyleProps</span><span class=\"token punctuation\">(</span>attributes<span class=\"token punctuation\">,</span> colors<span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ColorEdit</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">...</span><span class=\"token attr-value\">props</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Block.div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">RichText</span></span>\n        <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>colorProps<span class=\"token punctuation\">.</span>className<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>colorProps<span class=\"token punctuation\">.</span>style <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token punctuation\">/></span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>Block.div</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>If you want to remove support for gradient backgrounds and have copied the <code class=\"language-text\">ColorEdit</code> component from the <code class=\"language-text\">core/button</code> block, delete the following lines within the <code class=\"language-text\">settings</code> prop of the <code class=\"language-text\">ColorPanel</code> (around line 240).</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gradientValue,\nonGradientChange: onChangeGradient,</code></pre></div>\n<h2>The <code class=\"language-text\">save</code> function</h2>\n<h3>Using <code class=\"language-text\">supports</code></h3>\n<p>Similar as to the <code class=\"language-text\">edit</code> function you can remove everything relating to colors (<code class=\"language-text\">getColorClassName</code>, <code class=\"language-text\">className</code> and <code class=\"language-text\">style</code> if not used for other things).</p>\n<h3>Manual control</h3>\n<p>Again import the <code class=\"language-text\">getColorAndStyleProps</code> function which can then be used to transform the relevant attributes into classes and/or style rules.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> getColorAndStyleProps <span class=\"token keyword\">from</span> <span class=\"token string\">\"./getColorAndStyleProps\"</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> attributes <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> colorProps <span class=\"token operator\">=</span> <span class=\"token function\">getColorAndStyleProps</span><span class=\"token punctuation\">(</span>attributes<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> classes <span class=\"token operator\">=</span> colorProps<span class=\"token punctuation\">.</span>className\n  <span class=\"token keyword\">const</span> style <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token operator\">...</span>colorProps<span class=\"token punctuation\">.</span>style <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Do whatever else, then return the component</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>classes<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>style<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n      Component contents.\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Custom Blocks with a Color Picker in core v5.5","date":"October 30, 2020","description":null}},"previous":{"fields":{"slug":"/formatting-phone-numbers/"},"frontmatter":{"title":"Formatting phone numbers"}},"next":{"fields":{"slug":"/useful-cli-commands/"},"frontmatter":{"title":"Useful CLI Commands"}}},"pageContext":{"id":"c80cbf01-90a9-56d2-902f-45638e5ce7e3","previousPostId":"727a9696-137f-5a7b-8a51-c839606e48cd","nextPostId":"3c14bca8-0eee-5940-815b-73cb7ca70dda"}},"staticQueryHashes":["1633425274","2841359383"]}